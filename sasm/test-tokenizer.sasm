;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; Test tokenizer
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(import sasm)
(import (syscalls *))
(import alloc)
(import symbol-table)
(import util)

(defcon input "tests/tokenize-int.sasm\0")

(jal x1 (alloc init))
(jal x1 (symbol-table init))
(la x11 input)
(jal x1 (sasm read-file))
(bne x12 x0 read-err)

(la x12 input)
(addi x13 x0 (len input))
(subi x13 x13 1)
(jal x1 (sasm Tokenizer new))
(add x21 x0 x10)
tokenize-loop
    (jal x1 (sasm tokenize))
    (bne x10 x0 tokenize-loop)
(ld x10 (+ x21 (sasm Tokenizer err)))
(bne x10 x0 tokenize-err)
(ld x10 (+ x21 (sasm Tokenizer tokens.start)))
(ld x11 (+ x21 (sasm Tokenizer tokens)))

;; 123
(beq x10 x11 len-err)
(lb x5 x10)
(subi x5 x5 (sasm Token Integer))
(bne x5 x0 type-err)
(ld x5 (+ x10 8))
(subi x5 x5 123)
(bne x5 x0 val-err)
(addi x10 x10 16)
;; -123
(beq x10 x11 len-err)
(lb x5 x10)
(subi x5 x5 (sasm Token Integer))
(bne x5 x0 type-err)
(ld x5 (+ x10 8))
(subi x5 x5 -123)
(bne x5 x0 val-err)
(addi x10 x10 16)
;; +123
(beq x10 x11 len-err)
(lb x5 x10)
(subi x5 x5 (sasm Token Integer))
(bne x5 x0 type-err)
(ld x5 (+ x10 8))
(subi x5 x5 123)
(bne x5 x0 val-err)
(addi x10 x10 16)
;; 0o123
(beq x10 x11 len-err)
(lb x5 x10)
(subi x5 x5 (sasm Token Integer))
(bne x5 x0 type-err)
(ld x5 (+ x10 8))
(subi x5 x5 0o123)
(bne x5 x0 val-err)
(addi x10 x10 16)
;; -0o123
(beq x10 x11 len-err)
(lb x5 x10)
(subi x5 x5 (sasm Token Integer))
(bne x5 x0 type-err)
(ld x5 (+ x10 8))
(subi x5 x5 -0o123)
(bne x5 x0 val-err)
(addi x10 x10 16)
;; +0o123
(beq x10 x11 len-err)
(lb x5 x10)
(subi x5 x5 (sasm Token Integer))
(bne x5 x0 type-err)
(ld x5 (+ x10 8))
(subi x5 x5 0o123)
(bne x5 x0 val-err)
(addi x10 x10 16)
;; 0x123
(beq x10 x11 len-err)
(lb x5 x10)
(subi x5 x5 (sasm Token Integer))
(bne x5 x0 type-err)
(ld x5 (+ x10 8))
(subi x5 x5 0x123)
(bne x5 x0 val-err)
(addi x10 x10 16)
;; -0x123
(beq x10 x11 len-err)
(lb x5 x10)
(subi x5 x5 (sasm Token Integer))
(bne x5 x0 type-err)
(ld x5 (+ x10 8))
(subi x5 x5 -0x123)
(bne x5 x0 val-err)
(addi x10 x10 16)
;; +0x123
(beq x10 x11 len-err)
(lb x5 x10)
(subi x5 x5 (sasm Token Integer))
(bne x5 x0 type-err)
(ld x5 (+ x10 8))
(subi x5 x5 0x123)
(bne x5 x0 val-err)
(addi x10 x10 16)
;; 0b101
(beq x10 x11 len-err)
(lb x5 x10)
(subi x5 x5 (sasm Token Integer))
(bne x5 x0 type-err)
(ld x5 (+ x10 8))
(subi x5 x5 0b101)
(bne x5 x0 val-err)
(addi x10 x10 16)
;; -0b101
(beq x10 x11 len-err)
(lb x5 x10)
(subi x5 x5 (sasm Token Integer))
(bne x5 x0 type-err)
(ld x5 (+ x10 8))
(subi x5 x5 -0b101)
(bne x5 x0 val-err)
(addi x10 x10 16)
;; +0b101
(beq x10 x11 len-err)
(lb x5 x10)
(subi x5 x5 (sasm Token Integer))
(bne x5 x0 type-err)
(ld x5 (+ x10 8))
(subi x5 x5 0b101)
(bne x5 x0 val-err)
(addi x10 x10 16)
;; 0xabc1
(beq x10 x11 len-err)
(lui x6 11)
(addi x6 x6 -1087)
(lb x5 x10)
(subi x5 x5 (sasm Token Integer))
(bne x5 x0 type-err)
(ld x5 (+ x10 8))
(sub x5 x5 x6)
(bne x5 x0 val-err)
(addi x10 x10 16)
;; -0xabc1
(beq x10 x11 len-err)
(lb x5 x10)
(subi x5 x5 (sasm Token Integer))
(bne x5 x0 type-err)
(ld x5 (+ x10 8))
(add x5 x5 x6)
(bne x5 x0 val-err)
(addi x10 x10 16)
;; +0xabc1
(beq x10 x11 len-err)
(lb x5 x10)
(subi x5 x5 (sasm Token Integer))
(bne x5 x0 type-err)
(ld x5 (+ x10 8))
(sub x5 x5 x6)
(bne x5 x0 val-err)
(addi x10 x10 16)

;; _123
(beq x10 x11 len-err)
(lb x5 x10)
(subi x5 x5 (sasm Token Symbol))
(bne x5 x0 type-err)
(addi x10 x10 16)
;; +_123
(beq x10 x11 len-err)
(lb x5 x10)
(subi x5 x5 (sasm Token Symbol))
(bne x5 x0 type-err)
(addi x10 x10 16)
;; -_123
(beq x10 x11 len-err)
(lb x5 x10)
(subi x5 x5 (sasm Token Symbol))
(bne x5 x0 type-err)
(addi x10 x10 16)

;; 1_2_3
(beq x10 x11 len-err)
(lb x5 x10)
(subi x5 x5 (sasm Token Integer))
(bne x5 x0 type-err)
(ld x5 (+ x10 8))
(subi x5 x5 123)
(bne x5 x0 val-err)
(addi x10 x10 16)
;; 0000___1_2_3__
(beq x10 x11 len-err)
(lb x5 x10)
(subi x5 x5 (sasm Token Integer))
(bne x5 x0 type-err)
(ld x5 (+ x10 8))
(subi x5 x5 123)
(bne x5 x0 val-err)
(addi x10 x10 16)
;; 0x00___1_2_3__
(beq x10 x11 len-err)
(lb x5 x10)
(subi x5 x5 (sasm Token Integer))
(bne x5 x0 type-err)
(ld x5 (+ x10 8))
(subi x5 x5 0x123)
(bne x5 x0 val-err)
(addi x10 x10 16)
;; 0x___1_2_3__
(beq x10 x11 len-err)
(lb x5 x10)
(subi x5 x5 (sasm Token Integer))
(bne x5 x0 type-err)
(ld x5 (+ x10 8))
(subi x5 x5 0x123)
(bne x5 x0 val-err)
(addi x10 x10 16)

;; 0x___
(beq x10 x11 len-err)
(lb x5 x10)
(subi x5 x5 (sasm Token Symbol))
(bne x5 x0 type-err)
(addi x10 x10 16)

(addi x10 x0 0)
(addi x17 x0 SYS_EXIT)
(ecall)

read-err
    (addi x10 x0 1)
    (addi x17 x0 SYS_EXIT)
    (ecall)
tokenize-err
    (addi x10 x0 2)
    (addi x17 x0 SYS_EXIT)
    (ecall)
len-err
    (addi x10 x0 3)
    (addi x17 x0 SYS_EXIT)
    (ecall)
type-err
    (addi x10 x0 4)
    (addi x17 x0 SYS_EXIT)
    (ecall)
val-err
    (addi x10 x0 5)
    (addi x17 x0 SYS_EXIT)
    (ecall)
