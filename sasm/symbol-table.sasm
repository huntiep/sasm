(import (alloc malloc))
(import (alloc calloc))
(import (alloc free))
(import (syscalls *))
(import (sasm-strings *))
(import (util strdup))

(defvar SYMBOL-TABLE 0)
(defvar SYMBOL-TABLE.len 0)
(defvar SYMBOL-TABLE.capacity 0)

(module init
    (subi x2 x2 8)
    (sd x2 x1)

    (addi x10 x0 256)
    (slli x10 x10 4)
    (jal x1 calloc)
    (la x5 SYMBOL-TABLE)
    (sd x5 x10)
    (la x5 SYMBOL-TABLE.capacity)
    (addi x6 x0 256)
    (sd x5 x6)

    (la x10 Register::x0::str)
    (addi x11 x0 (len Register::x0::str))
    (jal x1 string->symbol)
    (la x10 Register::x1::str)
    (addi x11 x0 (len Register::x1::str))
    (jal x1 string->symbol)
    (la x10 Register::x2::str)
    (addi x11 x0 (len Register::x2::str))
    (jal x1 string->symbol)
    (la x10 Register::x3::str)
    (addi x11 x0 (len Register::x3::str))
    (jal x1 string->symbol)
    (la x10 Register::x4::str)
    (addi x11 x0 (len Register::x4::str))
    (jal x1 string->symbol)
    (la x10 Register::x5::str)
    (addi x11 x0 (len Register::x5::str))
    (jal x1 string->symbol)
    (la x10 Register::x6::str)
    (addi x11 x0 (len Register::x6::str))
    (jal x1 string->symbol)
    (la x10 Register::x7::str)
    (addi x11 x0 (len Register::x7::str))
    (jal x1 string->symbol)
    (la x10 Register::x8::str)
    (addi x11 x0 (len Register::x8::str))
    (jal x1 string->symbol)
    (la x10 Register::x9::str)
    (addi x11 x0 (len Register::x9::str))
    (jal x1 string->symbol)
    (la x10 Register::x10::str)
    (addi x11 x0 (len Register::x10::str))
    (jal x1 string->symbol)
    (la x10 Register::x11::str)
    (addi x11 x0 (len Register::x11::str))
    (jal x1 string->symbol)
    (la x10 Register::x12::str)
    (addi x11 x0 (len Register::x12::str))
    (jal x1 string->symbol)
    (la x10 Register::x13::str)
    (addi x11 x0 (len Register::x13::str))
    (jal x1 string->symbol)
    (la x10 Register::x14::str)
    (addi x11 x0 (len Register::x14::str))
    (jal x1 string->symbol)
    (la x10 Register::x15::str)
    (addi x11 x0 (len Register::x15::str))
    (jal x1 string->symbol)
    (la x10 Register::x16::str)
    (addi x11 x0 (len Register::x16::str))
    (jal x1 string->symbol)
    (la x10 Register::x17::str)
    (addi x11 x0 (len Register::x17::str))
    (jal x1 string->symbol)
    (la x10 Register::x18::str)
    (addi x11 x0 (len Register::x18::str))
    (jal x1 string->symbol)
    (la x10 Register::x19::str)
    (addi x11 x0 (len Register::x19::str))
    (jal x1 string->symbol)
    (la x10 Register::x20::str)
    (addi x11 x0 (len Register::x20::str))
    (jal x1 string->symbol)
    (la x10 Register::x21::str)
    (addi x11 x0 (len Register::x21::str))
    (jal x1 string->symbol)
    (la x10 Register::x22::str)
    (addi x11 x0 (len Register::x22::str))
    (jal x1 string->symbol)
    (la x10 Register::x23::str)
    (addi x11 x0 (len Register::x23::str))
    (jal x1 string->symbol)
    (la x10 Register::x24::str)
    (addi x11 x0 (len Register::x24::str))
    (jal x1 string->symbol)
    (la x10 Register::x25::str)
    (addi x11 x0 (len Register::x25::str))
    (jal x1 string->symbol)
    (la x10 Register::x26::str)
    (addi x11 x0 (len Register::x26::str))
    (jal x1 string->symbol)
    (la x10 Register::x27::str)
    (addi x11 x0 (len Register::x27::str))
    (jal x1 string->symbol)
    (la x10 Register::x28::str)
    (addi x11 x0 (len Register::x28::str))
    (jal x1 string->symbol)
    (la x10 Register::x29::str)
    (addi x11 x0 (len Register::x29::str))
    (jal x1 string->symbol)
    (la x10 Register::x30::str)
    (addi x11 x0 (len Register::x30::str))
    (jal x1 string->symbol)
    (la x10 Register::x31::str)
    (addi x11 x0 (len Register::x31::str))
    (jal x1 string->symbol)

    (la x10 Instr::add::str)
    (addi x11 x0 (len Instr::add::str))
    (jal x1 string->symbol)
    (la x10 Instr::sub::str)
    (addi x11 x0 (len Instr::sub::str))
    (jal x1 string->symbol)
    (la x10 Instr::xor::str)
    (addi x11 x0 (len Instr::xor::str))
    (jal x1 string->symbol)
    (la x10 Instr::or::str)
    (addi x11 x0 (len Instr::or::str))
    (jal x1 string->symbol)
    (la x10 Instr::and::str)
    (addi x11 x0 (len Instr::and::str))
    (jal x1 string->symbol)
    (la x10 Instr::sll::str)
    (addi x11 x0 (len Instr::sll::str))
    (jal x1 string->symbol)
    (la x10 Instr::srl::str)
    (addi x11 x0 (len Instr::srl::str))
    (jal x1 string->symbol)
    (la x10 Instr::sra::str)
    (addi x11 x0 (len Instr::sra::str))
    (jal x1 string->symbol)
    (la x10 Instr::slt::str)
    (addi x11 x0 (len Instr::slt::str))
    (jal x1 string->symbol)
    (la x10 Instr::sltu::str)
    (addi x11 x0 (len Instr::sltu::str))
    (jal x1 string->symbol)
    (la x10 Instr::mul::str)
    (addi x11 x0 (len Instr::mul::str))
    (jal x1 string->symbol)
    (la x10 Instr::div::str)
    (addi x11 x0 (len Instr::div::str))
    (jal x1 string->symbol)
    (la x10 Instr::rem::str)
    (addi x11 x0 (len Instr::rem::str))
    (jal x1 string->symbol)

    (la x10 Instr::addi::str)
    (addi x11 x0 (len Instr::addi::str))
    (jal x1 string->symbol)
    (la x10 Instr::subi::str)
    (addi x11 x0 (len Instr::subi::str))
    (jal x1 string->symbol)
    (la x10 Instr::xori::str)
    (addi x11 x0 (len Instr::xori::str))
    (jal x1 string->symbol)
    (la x10 Instr::ori::str)
    (addi x11 x0 (len Instr::ori::str))
    (jal x1 string->symbol)
    (la x10 Instr::andi::str)
    (addi x11 x0 (len Instr::andi::str))
    (jal x1 string->symbol)
    (la x10 Instr::slti::str)
    (addi x11 x0 (len Instr::slti::str))
    (jal x1 string->symbol)
    (la x10 Instr::sltiu::str)
    (addi x11 x0 (len Instr::sltiu::str))
    (jal x1 string->symbol)
    (la x10 Instr::srai::str)
    (addi x11 x0 (len Instr::srai::str))
    (jal x1 string->symbol)
    (la x10 Instr::slli::str)
    (addi x11 x0 (len Instr::slli::str))
    (jal x1 string->symbol)
    (la x10 Instr::srli::str)
    (addi x11 x0 (len Instr::srli::str))
    (jal x1 string->symbol)

    (la x10 Instr::lb::str)
    (addi x11 x0 (len Instr::lb::str))
    (jal x1 string->symbol)
    (la x10 Instr::lh::str)
    (addi x11 x0 (len Instr::lh::str))
    (jal x1 string->symbol)
    (la x10 Instr::lw::str)
    (addi x11 x0 (len Instr::lw::str))
    (jal x1 string->symbol)
    (la x10 Instr::ld::str)
    (addi x11 x0 (len Instr::ld::str))
    (jal x1 string->symbol)
    (la x10 Instr::lbu::str)
    (addi x11 x0 (len Instr::lbu::str))
    (jal x1 string->symbol)
    (la x10 Instr::lhu::str)
    (addi x11 x0 (len Instr::lhu::str))
    (jal x1 string->symbol)
    (la x10 Instr::lwu::str)
    (addi x11 x0 (len Instr::lwu::str))
    (jal x1 string->symbol)

    (la x10 Instr::sb::str)
    (addi x11 x0 (len Instr::sb::str))
    (jal x1 string->symbol)
    (la x10 Instr::sh::str)
    (addi x11 x0 (len Instr::sh::str))
    (jal x1 string->symbol)
    (la x10 Instr::sw::str)
    (addi x11 x0 (len Instr::sw::str))
    (jal x1 string->symbol)
    (la x10 Instr::sd::str)
    (addi x11 x0 (len Instr::sd::str))
    (jal x1 string->symbol)

    (la x10 Instr::beq::str)
    (addi x11 x0 (len Instr::beq::str))
    (jal x1 string->symbol)
    (la x10 Instr::bne::str)
    (addi x11 x0 (len Instr::bne::str))
    (jal x1 string->symbol)
    (la x10 Instr::blt::str)
    (addi x11 x0 (len Instr::blt::str))
    (jal x1 string->symbol)
    (la x10 Instr::bge::str)
    (addi x11 x0 (len Instr::bge::str))
    (jal x1 string->symbol)
    (la x10 Instr::bltu::str)
    (addi x11 x0 (len Instr::bltu::str))
    (jal x1 string->symbol)
    (la x10 Instr::bgeu::str)
    (addi x11 x0 (len Instr::bgeu::str))
    (jal x1 string->symbol)

    (la x10 Instr::jal::str)
    (addi x11 x0 (len Instr::jal::str))
    (jal x1 string->symbol)
    (la x10 Instr::jalr::str)
    (addi x11 x0 (len Instr::jalr::str))
    (jal x1 string->symbol)
    (la x10 Instr::lui::str)
    (addi x11 x0 (len Instr::lui::str))
    (jal x1 string->symbol)
    (la x10 Instr::auipc::str)
    (addi x11 x0 (len Instr::auipc::str))
    (jal x1 string->symbol)
    (la x10 Instr::ecall::str)
    (addi x11 x0 (len Instr::ecall::str))
    (jal x1 string->symbol)
    (la x10 Instr::ebreak::str)
    (addi x11 x0 (len Instr::ebreak::str))
    (jal x1 string->symbol)
    (la x10 Instr::la::str)
    (addi x11 x0 (len Instr::la::str))
    (jal x1 string->symbol)

    (la x10 Instr::len::str)
    (addi x11 x0 (len Instr::len::str))
    (jal x1 string->symbol)
    (la x10 Instr::+::str)
    (addi x11 x0 (len Instr::+::str))
    (jal x1 string->symbol)
    (la x10 Instr::-::str)
    (addi x11 x0 (len Instr::-::str))
    (jal x1 string->symbol)
    (la x10 Instr::import::str)
    (addi x11 x0 (len Instr::import::str))
    (jal x1 string->symbol)
    (la x10 Instr::module::str)
    (addi x11 x0 (len Instr::module::str))
    (jal x1 string->symbol)
    (la x10 Instr::^::str)
    (addi x11 x0 (len Instr::^::str))
    (jal x1 string->symbol)
    (la x10 Instr::*::str)
    (addi x11 x0 (len Instr::*::str))
    (jal x1 string->symbol)
    (la x10 Instr::include!::str)
    (addi x11 x0 (len Instr::include!::str))
    (jal x1 string->symbol)
    (la x10 Instr::define::str)
    (addi x11 x0 (len Instr::define::str))
    (jal x1 string->symbol)
    (la x10 Instr::defvar::str)
    (addi x11 x0 (len Instr::defvar::str))
    (jal x1 string->symbol)
    (la x10 Instr::defcon::str)
    (addi x11 x0 (len Instr::defcon::str))
    (jal x1 string->symbol)

    (ld x1 x2)
    (addi x2 x2 8)
    (jalr x0 x1)
)

;; Args:
;;  x10 - string pointer
;;  x11 - string length
;;  x12 - Option<symbol> -- internal use
;; Ret:
;;  x10 - symbol
(module string->symbol
    (la x5 SYMBOL-TABLE.capacity)
    (ld x6 x5)
    (srai x30 x6 1)
    (la x29 SYMBOL-TABLE.len)
    (ld x31 x29)
    (bge x31 x30 resize)
    (add x12 x0 x0)
    resize-done

    (define FNV_OFFSET 14695981039346656037)
    (define FNV_PRIME 1099511628211)
    ;; FNV_OFFSET
    (lui x5 -213206)
    (addi x5 x5 -795)
    (slli x5 x5 32)
    (lui x6 -507358)
    (addi x6 x6 805)
    (add x5 x5 x6)
    ;; FNV_PRIME
    (addi x6 x0 1)
    (slli x6 x6 40)
    (addi x6 x6 435)

    (add x30 x0 x10)
    (add x31 x10 x11)
    hash
        (lbu x29 x30)
        (xor x5 x5 x29)
        (mul x5 x5 x6)
        (addi x30 x30 1)
        (bne x30 x31 hash)
    (la x31 SYMBOL-TABLE.capacity)
    (ld x31 x31)
    (subi x6 x31 1)
    (and x5 x5 x6)
    (slli x5 x5 4)

    (la x6 SYMBOL-TABLE)
    (ld x6 x6)
    (add x5 x6 x5)
    (slli x31 x31 4)
    (add x6 x31 x6)
    (add x30 x0 x10)
    lookup
        (ld x28 x5)
        (beq x28 x0 set-entry)
        (lw x29 (+ x5 8))
        (bne x29 x11 lookup-continue)
    lookup-strcmp
        (lb x7 x28)
        (lb x31 x30)
        (bne x7 x31 lookup-continue)
        (addi x28 x28 1)
        (addi x30 x30 1)
        (subi x29 x29 1)
        (bne x29 x0 lookup-strcmp)
        (jal x0 lookup-found)
    lookup-continue
        (add x30 x0 x10)
        (addi x5 x5 16)
        (bne x5 x6 lookup)
    lookup-loopback
        (la x5 SYMBOL-TABLE)
        (ld x5 x5)
        (jal x0 lookup)
    lookup-found
        (lw x10 (+ x5 12))
        (jalr x0 x1)

    set-entry
        (la x29 SYMBOL-TABLE.len)
        (ld x31 x29)
        (addi x31 x31 1)
        (sd x29 x31)
        (bne x12 x0 set-entry-len)
        (subi x2 x2 40)
        (sd x2 x1)
        (sd (+ x2 8) x10)
        (sd (+ x2 16) x11)
        (sd (+ x2 24) x31)
        (sd (+ x2 32) x5)
        (add x10 x0 x11)
        (jal x1 malloc)
        (ld x11 (+ x2 8))
        (sd (+ x2 8) x10)
        (ld x12 (+ x2 16))
        (jal x1 strdup)
        (ld x1 x2)
        (ld x10 (+ x2 8))
        (ld x11 (+ x2 16))
        (ld x12 (+ x2 24))
        (ld x5 (+ x2 32))
        (addi x2 x2 40)
    set-entry-len
        (sd x5 x10)
        (sw (+ x5 8) x11)
        (sw (+ x5 12) x12)
        (add x10 x0 x12)
        (jalr x0 x1)

    resize
        (subi x2 x2 48)
        (sd x2 x1)
        (sd (+ x2 8) x10)
        (sd (+ x2 16) x11)

        (slli x10 x6 1)
        (sd x5 x10)
        (slli x10 x10 3)
        (sd (+ x2 24) x10)
        (slli x10 x10 1)
        (jal x1 calloc)

        (la x5 SYMBOL-TABLE.len)
        (sd x5 x0)
        (la x6 SYMBOL-TABLE)
        (ld x5 x6)
        (sd x6 x10)
        (sd (+ x2 40) x5)
        (ld x6 (+ x2 24))
        (add x6 x6 x5)
        (sd (+ x2 24) x6)

        resize-loop
            (beq x5 x6 resize-loop-after)
            (ld x10 x5)
            (addi x5 x5 16)
            (beq x10 x0 resize-loop)
            (lw x11 (- x5 8))
            (lw x12 (- x5 4))
            (sd (+ x2 32) x5)
            (jal x1 resize-done)
            (ld x6 (+ x2 24))
            (ld x5 (+ x2 32))
            (jal x0 resize-loop)
        resize-loop-after

        (ld x10 (+ x2 40))
        (jal x1 free)

        (ld x1 x2)
        (ld x10 (+ x2 8))
        (ld x11 (+ x2 16))
        (addi x2 x2 48)
        (add x12 x0 x0)
        (jal x0 resize-done)
)

;; Args:
;;  x10 - symbol
;; Ret:
;;  x10 - string
;;  x11 - string.len
(module symbol->string
    (beq x10 x0 err)
    (la x5 SYMBOL-TABLE.len)
    (ld x5 x5)
    (blt x5 x10 err)
    (la x5 SYMBOL-TABLE)
    (ld x5 x5)
    (la x6 SYMBOL-TABLE.capacity)
    (ld x6 x6)
    (slli x6 x6 4)
    (add x6 x5 x6)
    loop
        (beq x5 x6 err)
        (addi x5 x5 16)
        (lw x7 (- x5 4))
        (bne x7 x10 loop)
    (ld x10 (- x5 16))
    (lw x11 (- x5 8))
    (jalr x0 x1)

    err
        (defcon panic "INVARIANT BROKEN in `symbol->string()`\n")
        (addi x10 x0 STDERR)
        (la x11 panic)
        (addi x12 x0 (len panic))
        (addi x17 x0 SYS_WRITE)
        (ecall)
        (addi x10 x0 1)
        (addi x17 x0 SYS_EXIT)
        (ecall)
)
